# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "opentable/win-2012r2-standard-amd64-nocm"  

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "D:/aaa_development", "C:/aaa_development"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  
     # Customize the amount of memory on the VM:
     vb.memory = "2048"	
	vb.customize ['modifyvm', :id, '--clipboard', 'bidirectional'] 
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
     cd C:/aaa_development/downloads	 
	 
	 Write-Host "Installing 2015 C++ Redist"
	 ./vc_redist.x64.exe /q /norestart
	 
	 Write-Host "Installing .NET"
	 ./NDP472-DevPack-ENU.exe /q /norestart
	 
	 Write-Host "Starting Chrome Install"
	 ./ChromeStandaloneSetup64.exe /silent /install
	 
	 Write-Host "Starting tortoisehg Install"
	 msiexec /i tortoisehg-5.0.2-x64.msi /quiet /qn /norestart /log tortoisehg_install.log 	 	
	 
	 Write-Host "Installing mRemote"
	 msiexec /i mRemoteNG-Installer-1.76.20.24615.msi /quiet /qn /norestart /log mRemoteNG_install.log 	 	
	 
	 Write-Host "Starting Notepad++ Install"
	 ./npp.7.5.4.Installer.exe /S
	 		 
	 dism /online /Enable-Feature /FeatureName:WirelessNetworking /NoRestart
	 
	 
	 	 
   SHELL
   
   # trigger reload
  config.vm.provision :reload

# execute code after reload
  config.vm.provision "shell", inline: <<-SHELL
     echo $(date) >> ~/rebootexample
	 Write-Host "Starting manual install of Pulse Secure"
	 msiexec /i ps-pulse-win-9.0r4.0-b1731-64bitinstaller.msi /quiet /qn /norestart /log pulse_install.log 
  SHELL
end
